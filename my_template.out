\BOOKMARK [0][-]{chapter.1}{1 Data Structures}{}% 1
\BOOKMARK [1][-]{section.1.1}{1.1 Fenwick Tree}{chapter.1}% 2
\BOOKMARK [2][-]{subsection.1.1.1}{1.1.1 unidimension}{section.1.1}% 3
\BOOKMARK [2][-]{subsection.1.1.2}{1.1.2 two-dimension}{section.1.1}% 4
\BOOKMARK [1][-]{section.1.2}{1.2 RMQ}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.3}{1.3 Splay Tree}{chapter.1}% 6
\BOOKMARK [2][-]{subsection.1.3.1}{1.3.1 Implemented by List}{section.1.3}% 7
\BOOKMARK [2][-]{subsection.1.3.2}{1.3.2 Implemented by array}{section.1.3}% 8
\BOOKMARK [0][-]{chapter.2}{2 Math}{}% 9
\BOOKMARK [1][-]{section.2.1}{2.1 High Precision Class}{chapter.2}% 10
\BOOKMARK [1][-]{section.2.2}{2.2 Number Theory}{chapter.2}% 11
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 Sieve of Eratosthenes}{section.2.2}% 12
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 Sieve of Euler}{section.2.2}% 13
\BOOKMARK [2][-]{subsection.2.2.3}{2.2.3 Euclid Algorithm}{section.2.2}% 14
\BOOKMARK [2][-]{subsection.2.2.4}{2.2.4 Euler Function}{section.2.2}% 15
\BOOKMARK [2][-]{subsection.2.2.5}{2.2.5 Calculate the Inversion}{section.2.2}% 16
\BOOKMARK [2][-]{subsection.2.2.6}{2.2.6 Chinese Remainder Theorem}{section.2.2}% 17
\BOOKMARK [2][-]{subsection.2.2.7}{2.2.7 Bezout Theorem}{section.2.2}% 18
\BOOKMARK [1][-]{section.2.3}{2.3 Combinatorics}{chapter.2}% 19
\BOOKMARK [2][-]{subsection.2.3.1}{2.3.1 Calculate Combinations by Recurrence}{section.2.3}% 20
\BOOKMARK [1][-]{section.2.4}{2.4 Matrix and System of Linear Equations}{chapter.2}% 21
\BOOKMARK [2][-]{subsection.2.4.1}{2.4.1 Matrix Fast Power}{section.2.4}% 22
\BOOKMARK [1][-]{section.2.5}{2.5 Numerical Method}{chapter.2}% 23
\BOOKMARK [2][-]{subsection.2.5.1}{2.5.1 Adaptive Simpson's Rule}{section.2.5}% 24
\BOOKMARK [0][-]{chapter.3}{3 Graph Theory}{}% 25
\BOOKMARK [1][-]{section.3.1}{3.1 Fundamentals}{chapter.3}% 26
\BOOKMARK [2][-]{subsection.3.1.1}{3.1.1 Topo Sort}{section.3.1}% 27
\BOOKMARK [2][-]{subsection.3.1.2}{3.1.2 Eulerian trail and circuit}{section.3.1}% 28
\BOOKMARK [1][-]{section.3.2}{3.2 Shortest Paths}{chapter.3}% 29
\BOOKMARK [1][-]{section.3.3}{3.3 Minimal Spanning Tree}{chapter.3}% 30
\BOOKMARK [2][-]{subsection.3.3.1}{3.3.1 Fundamentals}{section.3.3}% 31
\BOOKMARK [2][-]{subsection.3.3.2}{3.3.2 Kruskal algorithm}{section.3.3}% 32
\BOOKMARK [2][-]{subsection.3.3.3}{3.3.3 Second-best Minimum Spanning Tree}{section.3.3}% 33
\BOOKMARK [2][-]{subsection.3.3.4}{3.3.4 Minimal Bottleneck Spanning Tree}{section.3.3}% 34
\BOOKMARK [2][-]{subsection.3.3.5}{3.3.5 Minimal Directed Spanning Tree}{section.3.3}% 35
\BOOKMARK [1][-]{section.3.4}{3.4 Bipartite Graph Matching}{chapter.3}% 36
\BOOKMARK [2][-]{subsection.3.4.1}{3.4.1 Augmenting Path Algorithm}{section.3.4}% 37
\BOOKMARK [2][-]{subsection.3.4.2}{3.4.2 Kuhn-Munkers Algorithm}{section.3.4}% 38
\BOOKMARK [1][-]{section.3.5}{3.5 Network Flows}{chapter.3}% 39
\BOOKMARK [1][-]{section.3.6}{3.6 Depth First Search}{chapter.3}% 40
\BOOKMARK [2][-]{subsection.3.6.1}{3.6.1 Calculate DFS Sequence}{section.3.6}% 41
\BOOKMARK [2][-]{subsection.3.6.2}{3.6.2 Multiplication LCA Algorithm\(online\)}{section.3.6}% 42
\BOOKMARK [2][-]{subsection.3.6.3}{3.6.3 Targan's Off-line LCA Algorithm}{section.3.6}% 43
\BOOKMARK [0][-]{chapter.4}{4 String}{}% 44
\BOOKMARK [1][-]{section.4.1}{4.1 KMP}{chapter.4}% 45
\BOOKMARK [1][-]{section.4.2}{4.2 AC Automation}{chapter.4}% 46
\BOOKMARK [1][-]{section.4.3}{4.3 Suffix Array}{chapter.4}% 47
\BOOKMARK [1][-]{section.4.4}{4.4 Suffix Automation}{chapter.4}% 48
\BOOKMARK [1][-]{section.4.5}{4.5 String Hash}{chapter.4}% 49
\BOOKMARK [1][-]{section.4.6}{4.6 Longest Palindromic Substring}{chapter.4}% 50
\BOOKMARK [0][-]{chapter.5}{5 Geometry}{}% 51
\BOOKMARK [1][-]{section.5.1}{5.1 Basic}{chapter.5}% 52
\BOOKMARK [1][-]{section.5.2}{5.2 Problems About Circle and Sphere}{chapter.5}% 53
\BOOKMARK [2][-]{subsection.5.2.1}{5.2.1 Definition of circle}{section.5.2}% 54
\BOOKMARK [2][-]{subsection.5.2.2}{5.2.2 Calculate the intersection of line and circle}{section.5.2}% 55
\BOOKMARK [2][-]{subsection.5.2.3}{5.2.3 Calculate the intersection of circles}{section.5.2}% 56
\BOOKMARK [1][-]{section.5.3}{5.3 2D Algorithm}{chapter.5}% 57
\BOOKMARK [2][-]{subsection.5.3.1}{5.3.1 Judge whether point in polygon}{section.5.3}% 58
\BOOKMARK [1][-]{section.5.4}{5.4 3D Algorithm}{chapter.5}% 59
\BOOKMARK [1][-]{section.5.5}{5.5 Stimulated Annealing Algorithm}{chapter.5}% 60
\BOOKMARK [2][-]{subsection.5.5.1}{5.5.1 Minimum Sphere Coverage}{section.5.5}% 61
\BOOKMARK [0][-]{chapter.6}{6 Dynamic Programming}{}% 62
\BOOKMARK [1][-]{section.6.1}{6.1 Longest Common Increasing Sequence}{chapter.6}% 63
\BOOKMARK [0][-]{chapter.7}{7 Other Topics}{}% 64
\BOOKMARK [1][-]{section.7.1}{7.1 Dichotomy}{chapter.7}% 65
\BOOKMARK [2][-]{subsection.7.1.1}{7.1.1 condition 1}{section.7.1}% 66
\BOOKMARK [2][-]{subsection.7.1.2}{7.1.2 condition 2}{section.7.1}% 67
\BOOKMARK [2][-]{subsection.7.1.3}{7.1.3 condition 3}{section.7.1}% 68
\BOOKMARK [1][-]{section.7.2}{7.2 Hash List}{chapter.7}% 69
\BOOKMARK [1][-]{section.7.3}{7.3 Construct a proper answer for N Queens Problem}{chapter.7}% 70
